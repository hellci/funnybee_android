image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"


before_script:
- apt-get --quiet update --yes
- apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
- wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
- unzip -d android-sdk-linux android-sdk.zip
- echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
- echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
- echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
- export ANDROID_HOME=$PWD/android-sdk-linux
- export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
- chmod +x ./gradlew
# temporarily disable checking for EPIPE error and use yes to accept all licenses
- set +o pipefail
- yes | android-sdk-linux/tools/bin/sdkmanager --licenses
- set -o pipefail

stages:
- environment
- build
- test
- quality_assurance
- deploy

.update_container_job:
  image: docker:stable
  stage: environment
  services:
  - docker:dind
  script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
  - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

lint_debug:
  stage: build
  script:
  - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assemble_debug:
  stage: build
  script:
  - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

#debug_tests:
#  stage: test
#  script:
#  - ./gradlew -Pci --console=plain :app:testDebug
unit_tests:
  stage: test
  script:
  - ./gradlew test
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: on_failure
    expire_in: 4 days
    paths:
    - app/build/reports/tests/

#instrumentation_tests:
#  stage: test
#  script:
#  - emulator -avd testAVD -no-audio -no-window &
#  - ./ci/android-wait-for-emulator.sh
#  - adb devices
#  - adb shell settings put global window_animation_scale 0 &
#  - adb shell settings put global transition_animation_scale 0 &
#  - adb shell settings put global animator_duration_scale 0 &
#  - adb shell input keyevent 82 &
#  - ./gradlew connectedAndroidTest
#  - ./ci/stop-emulators.sh
#  artifacts:
#    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
#    when: on_failure
#    expire_in: 4 days
#    paths:
#    - app/build/reports/androidTests/connected/

static_analysis:
  stage: quality_assurance
  script:
  - ./gradlew lint
  - ./gradlew findbugs
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: on_failure
    expire_in: 4 days
    paths:
    - app/build/reports/

#deploy_internal:
#  stage: deploy
#  script:
#  - bundle exec fastlane android deploy_debug_local
#  when: manual